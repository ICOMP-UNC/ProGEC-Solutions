name: "Build"
description: "Executes a compilation."

on:
    workflow_dispatch:
    pull_request:
      # Pull request events
      types: [synchronize, opened, reopened, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-20.04

runs:
  using: composite
  steps:
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install PlatformIO
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Run PlatformIO
      shell: bash
      run: |
        environments=${{ inputs.environments }}
        ignores=${{ inputs.ignores }}
        upload_port=${{ inputs.upload-port }}
        test_port=${{ inputs.test-port }}
        project_dir=${{ inputs.project-dir }}
        force_remote=${{ inputs.force-remote }}
        without_building=${{ inputs.without-building }}
        without_uploading=${{ inputs.without-uploading }}
        verbose=${{ inputs.verbose }}

        args=()

        if [ -n "$environments" ]; then args+=("--environment ${environments//,/ -e }"); fi
        if [ -n "$ignores" ]; then args+=("--ignore ${ignores//,/ -i }"); fi
        if [ -n "$upload_port" ]; then args+=("--upload-port $upload_port"); fi
        if [ -n "$test_port" ]; then args+=("--test-port $test_port"); fi
        if [ -n "$project_dir" ]; then args+=("--project-dir $project_dir"); fi
        if [ -n "$force_remote" ]; then args+=("--force-remote"); fi
        if [ -n "$without_building" ]; then args+=("--without-building"); fi
        if [ -n "$without_uploading" ]; then args+=("--without-uploading"); fi
        if [ -n "$verbose" ]; then args+=("--verbose"); fi

        echo ${args[*]} | xargs pio remote test


documentation:
  uses: ./actions/documentation/action.yml

style:
  uses: ./actions/style/action.yml